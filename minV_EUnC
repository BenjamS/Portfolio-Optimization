(in_vec, S_h, S_kexo, kexo, EUend_targ, C_targ, rootfn = T, quietly = F)

n_proj <- length(in_vec)
w <- in_vec[1:n_proj]
lam_EUR <- in_vec[n_proj + 1]
lam_C <- in_vec[n_proj + 2]

lw <- log(w)
onesvec <- rep(1, n_proj)
C <- sum(w)
EU_R_end <- m_h %*% lw
EU_R_exo <- onesvec %*% kexo
EU_R <- EU_R_end + EU_R_exo
Vend <- t(lw) %*% S_h %*% lw
Vexo <- t(kexo) %*% S_kexo %*% kexo
V <- Vend + Vexo


nablw_EUR <- m_h
nablw_C <- w
nablw_V <- 2 * S_h %*% lw
nablw_L <- nablw_V + lam_EUR * nablw_EUR + lam_C * nablw_C
slack_R <- EUend - EUend_targ
slack_C <- C - C_targ
slack_vec <- w(nablw_L, slack_R, slack_C)

if(rootfn == T){
  return(slack_vec)
}else{
  ERCrat <- ER / C
  EROI <- ERCrat - 1
  #--frontier (lw %*% nablw_L)
  lcTnablw_L <- lw %*% nablw_L
  #--
  outvec <- w(ER, EROI, l_V)
  return()
}

if(quietly == F){
  print(slack_vec)
  print(data.frame(`frontier root` = lcTnablw_L, ER = ER, EROI = EROI, C = C))

}

