#https://stats.stackexchange.com/questions/143905/loadings-vs-eigenvectors-in-pca-when-to-use-one-or-another
# n = 15
# t = 100
# X <- matrix(runif(n * t), t, n)
X <- EuStockMarkets
Xc <- scale(X, scale = F)
Xcs <- scale(X)
cormat <- cor(X)
P <- eigen(cormat)$vectors
eig_vals <- eigen(cormat)$values
sing_vals <- svd(Xc)$d
eig_vals / sing_vals^2
Scs <- Xcs %*% P
#P %*% diag(sqrt(eig_vals))
P[1, 1] * sqrt(eig_vals[1])
#P[1, 1] * sing_vals[1]
cor(Xcs[, 1], Scs[, 1])
cor(Xcs, Scs)
P %*% diag(sqrt(eig_vals))
cov(Xcs, Scs) %*% diag(1 / sqrt(eig_vals))
#1 / (nrow(Xcs) - 1) * t(Xcs) %*% Scs %*% diag(1 / sqrt(eig_vals))

cov(Xcs) %*% P

apply(Scs, 2, sd) * apply(Xcs, 2, sd)
sqrt(eig_vals)

round(t(cor(Xcs, Scs)) %*% cor(Xcs, Scs), 4)
eig_vals


S <- X %*% P
Sc <- Xc %*% P
covmat <- cov(X)
P <- eigen(covmat)$vectors
eig_vals <- eigen(covmat)$values
cov(Xc, Sc)
cov(X, Sc)
1 / (nrow(Xc) - 1) * t(Xc) %*% Sc
cov(X) %*% P
P %*% diag(eig_vals)
1 / (nrow(Xc) - 1) * t(Xc) %*% Xc %*% P
P %*% diag(eig_vals) %*% t(P) %*% P
P %*% diag(eig_vals)

cor(Xc, Sc)
Sig_X_S <- cov(Xc, Sc)
diag(1 / apply(Xc, 2, sd)) %*% Sig_X_S %*% diag(1 / apply(Sc, 2, sd))


Sig_X_S
P %*% diag(eig_vals)









eigvecs1 <- eigen(covmat)$vectors
eigvals1 <- eigen(covmat)$values
colSums(eigen(covmat)$vectors^2)
rowSums(eigen(covmat)$vectors^2)


res <- FactoMineR::PCA(X, scale.unit = F, ncp = ncol(X), graph = F)
eigvals <- as.data.frame(res$eig)$eigenvalue
eigval_max <- max(eigvals)
mat_loads <- res$var$coord

PC_scores <- X_c %*% eigvecs1

colMeans(PC_scores)

(mat_loads %*% diag(1 / sqrt(eigvals))) / eigvecs1

mat_loads_rot <- varimax(mat_loads)[[1]]
mat_loads_rot <- matrix(as.numeric(mat_loads_rot), attributes(mat_loads_rot)$dim, dimnames=attributes(mat_loads_rot)$dimnames)
R <- as.matrix(varimax(mat_loads)[[2]])
mat_eigvecs <- mat_loads %*% diag(1 / sqrt(eigvals))


mat_loads_rot - mat_loads %*% R

t(R) %*% t(mat_loads) %*% mat_loads %*% R

round(t(mat_loads) %*% mat_loads, 4)

t(R) %*% diag(eigvals)  %*% R

L_rot <- mat_loads_rot

t(L_rot) %*% L_rot

L_rot_c <- scale(L_rot, scale = F)




round(covmat - mat_loads %*% t(mat_loads), 5)

round(covmat - mat_loads_rot %*% t(mat_loads_rot), 5)

round(t(mat_loads) %*% covmat %*% mat_loads, 5)

round(t(mat_loads) %*% mat_loads,4)


Xc <- scale(X, scale = F)

S <- Xc %*% mat_loads
round(t(S) %*% S, 4)
round(t(S %*% R) %*% S %*% R, 4)
round(t(R) %*% round(t(S) %*% S, 4) %*% R, 4)


t(X) %*% X %*% mat_loads

mean(S)























The matrix of eigenvectors $\tilde{P}$ offers insight into the concrete meaning of the otherwise abstract signals $S$. For a given signal in $S$, the elements in the corresponding column of $\tilde{P}$ indicate how prominently each variable in $X$ figures into the movements of the signal. A handful of the columns of $\tilde{P}$ extracted from the financial data used above are plotted as barcharts in Figure \ref{fig:loads_barchart}. In the literature, it is said that the columns of $\tilde{P}$ indicate how much the variables contribute to or load onto each signal. For this reason, $\tilde{P}$ is sometimes referred to as the loadings matrix. This is further illustrated in Figure \ref{fig:sigPlot}, where high loading portfolio items can be seen to hew closely to the signals.

Now, the covariance matrix of signals $\tilde{\Sigma}$ is, by definition,

$$
\begin{equation}
\tilde{\Sigma} = \frac{1}{1-n}S'S
\end{equation}
$$

But note that, by equation \ref{eq:},

$$
\begin{equation}
\frac{1}{1-n} S'S = \frac{1}{1-n} \tilde{P}'X'X\tilde{P} = \tilde{P}'\Sigma\tilde{P} = \frac{1}{1-n} \tilde{\Lambda}
\end{equation}
$$
So, the covariance matrix of signals is essentially just the diagonal matrix of eigenvalues corresponding to the eigenvectors used in the creation of the signals.
$$
\begin{equation}
\tilde{\Sigma} = \frac{1}{1-n}\tilde{\Lambda}
\end{equation}
$$
