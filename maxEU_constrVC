maxEU_constrVC <- function(in_vec, Vend_targ, C_targ, m_h, S_h, rootfn = T, quietly = T){
  #in_vec <- c(1.9758359, -1.1307682,  0.1549323, -2.5105947, -1.5765046)
  n_proj <- length(m_h)
  lw <- in_vec[1:n_proj]
  w <- exp(lw)
  #print(in_vec)
  l_V <- in_vec[n_proj + 1]
  l_C <- in_vec[n_proj + 2]
  C <- sum(w)
  #--------------------------------
  nablw_EUr <- m_h
  nablw_C <- w
  nablw_V <- 2 * S_h %*% lw
  nablw_mat <- cbind(nablw_EUr, nablw_V, nablw_C)
  l_EUr <- 1
  l_vec <- c(l_EUr, l_V, l_C)
  nablw_L <- nablw_mat %*% l_vec
  Vend <- t(lw) %*% S_h %*% lw
  slack_Vend <- Vend - Vend_targ
  slack_C <- C - C_targ
  slack <- c(nablw_L, slack_Vend, slack_C)
  #--------------------------------
  if(quietly == F){
    Sh_inv <- round(solve(S_h), 6)
    #--lambdas slack
    Mert <- t(nablw_mat[, 2:3]) %*% Sh_inv %*% nablw_mat[, 2:3]
    Mert_inv <- round(solve(Mert), 6)
    MD <- t(l_vec[2:3]) %*% Mert_inv %*% l_vec[2:3]
    EUr_end <- t(lw) %*% m_h
    Uc <- w %*% lw
    l_effective <- 1 / 2 * Mert_inv %*% c(EUr_end, Uc)
    slack_l <- l_vec[2:3] - l_effective
    #--wgts slack
    w_effective <- exp(-1/2 * Sh_inv %*% (nablw_mat[, 2:3] %*% l_vec[2:3]))
    slack_w <- w - w_effective
    slack_w_and_l <- c(slack_w, slack_l)
    w_and_l <- c(w, l_V, l_C)
  }
  #--------------------------------
  if(rootfn == T){
    if(quietly == F){
      print(data.frame(slack, w_and_l, slack_w_and_l))
    }
    return(slack)
  }else{
    if(quietly == F){
      frontier_root <- 2 * Vend + t(lw) %*% nablw_mat[,2:3] %*% l_vec[2:3]
      print(data.frame(slack, w_and_l, slack_w_and_l))
      print(data.frame(frontierRoot = frontier_root))
      print(data.frame(EUr_end, Vend, C, MD))
      #---
    }else{
      Sh_inv <- round(solve(S_h), 6)
      Mert <- t(nablw_mat[, 2:3]) %*% Sh_inv %*% nablw_mat[, 2:3]
      Mert_inv <- round(solve(Mert), 6)
      MD <- t(l_vec[2:3]) %*% Mert_inv %*% l_vec[2:3]
      EUr_end <- t(lw) %*% m_h
    }
    outlist <- list(Vend, EUr_end, MD)
    return(outlist)
  }
  #--------------------------------
}
